# Any value in this file can be overridden by an environment variable
# named using the keys, in upper case, joined by underscores.  So for
# example, if the environment variable $SITE_NAME is set, its value
# will be used instead of the site name declared below.

site:
  name: 'Throat'
  # Lema shown in the page's title
  lema: 'Throat: Open discussion ;D'
  # Copyright line shown in the footer
  copyright: 'Umbrella Corp'

  # Name shown when a sub is owned by a deleted account or abandoned
  placeholder_account: 'Site'

  # Prefix for subs (by default it's 's').
  # It can be anything EXCEPT 'u', 'c' or 'p'
  sub_prefix: 's'

  # Allow everybody to upload files
  # (by default it's only admins and users authorized through a metadata key)
  allow_uploads: False

  # Minimum level a user must have before being able to upload files.
  # Set to zero to disable file upload level limits
  upload_min_level: 0

# For those who are allowed to upload files, allow video uploads
  # (.mp4 and .webm) as well.
  allow_video_uploads: True

  # Maximum size of an uploaded file, in bytes.
  upload_max_size: 16777216

  # Allow chat access for all users
  # If True, each user will have the option of disabling chat for themselves
  enable_chat: True

  # Allow all users to view the site log
  # If False, only Admin can view the sitelog
  sitelog_public: True

  # Forces all the sub logs to be public and removes the option to make them private.
  force_sublog_public: True

  # Amount of time in seconds the post author can edit a post's title after the post
  # was created. Set to zero to disable title editing (default is 5 minutes)
  title_edit_timeout: 300

  # If True, enables setting security questions on the admin page.
  # Users will be asked to answer one of these security questions before registering
  enable_security_question: False

  # Only allow Admins to create new subs
  # If True, only admins can create new subs
  sub_creation_admin_only: False

  # Minimum level a user must have before being able to create a sub.
  # Set to zero to disable sub creation level limits
  sub_creation_min_level: 2

  # Maximum amount of subs a single user can own.
  # The actual amount of subs a user may register scales with user level (user level minus one)
  # so a level 0 or level 1 user cannot register any subs. This scaling is disabled if `sub_creation_min_level` is zero
  sub_ownership_limit: 20

  # Maximum amount of posts a user can create in a single sub in a day
  daily_sub_posting_limit: 10

  # Maximum amount of posts a user can create in a single day
  daily_site_posting_limit: 25

app:
  # host to pass to SocketIO when we start the application
  host: "localhost"

  # URL to a working redis server.
  # Used for websockets (if enabled)
  redis_url: 'redis://127.0.0.1:6379'

  # Secret key used to encrypt session cookies.
  # You can generate one by using `os.urandom(24)`
  # ///// YOU MUST CHANGE THIS VALUE \\\\\
  secret_key: 'PUT SOMETHING HERE'

  # Enables debug mode. Always set to False in a production environment
  debug: True

  # This will make all captchas valid, disable caching and rate limits
  # Always set to False in a production environment
  development: True

  # Available languages for users to select. This will also be used when trying to guess
  # the user's language.
  languages:
    - en
    - es
    - ru
    - sk

  # Fallback language when there is no accept-language header sent by the browser
  fallback_language: 'en'

cache:
  # Caching strategy to use.
  # Recommended values:
  # - 'null' (no caching)
  # - 'redis' (recommended)
  # - 'simple' (only for testing)
  type: 'redis'

  # Redis to use for caching (if enabled)
  redis_url: 'redis://127.0.0.1:6379'

mail:
  # At the moment this is only used to send password recovery
  # emails.
  # Set these fields according to the instructions from your email
  # provider.
  server: smtp.example.com
  port: 587
  use_tls: True
  username: throat
  password: pass1234
  # Sender address
  default_from: 'noreply@example.com'

storage:
  # One of: LOCAL, S3, S3_US_WEST, S3_US_WEST_OREGON, S3_EU_WEST,
  # S3_AP_SOUTHEAST, S3_AP_NORTHEAST, GOOGLE_STORAGE, AZURE_BLOBS,
  # CLOUDFILES
  provider: 'LOCAL'

  # For cloud providers, uncomment and set these:
  #key: '...'
  #secret: '...'
  #container: '...'

  # Access control for cloud providers.  Options are "public-read",
  # "private", or blank for no access control.
  # acl: private

  # If the provider is local, and you want Throat to serve the files
  # instead of setting up nginx or another web server to do so,
  # uncomment these.  The server_url is the relative endpoint for the
  # files.  The thumbnails and uploads paths must be the same for the
  # local server to serve both.  Serving files from Throat is not
  # recommended for production, but may be useful for development.
  #server: True
  #server_url: '/files'

  thumbnails:
    # If provider is LOCAL, path where thumbnails will be stored (app
    # MUST have write access)
    path: './thumbs'
    # URL or relative path where thumbnails are served.  Ignored if
    # local server is enabled above.
    url: 'https://thumbs.example.com/'

  uploads:
    # Same rules as thumbnails
    path: './stor'
    url: 'https://usercontent.example.com/'

database:
  # Database engine. Possible values:
  # - MySQLDatabase
  # - PostgresqlDatabase
  # - SqliteDatabase (untested)
  engine: 'PICK ONE'

  # Parameters for both MySQL and postgres
  #host: 'localhost'
  #port: 3306
  #user: 'polsaker'
  #password: 'throat'
  # Database name
  #name: 'phuks'

  # For sqlite:
  #database: '/path/to/sqlite.db'

  # Uncomment if using Postgres:
  #autocommit: True

  # Uncomment if using MySQL
  #charset: 'utf8mb4'
